name: Test üß™

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test_unit:
    name: Run unit tests üÉè
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      # - uses: ArtiomTr/jest-coverage-report-action@v2
      #   with:
      #     package-manager: bun
      #     test-script: bun test:coverage
      #     annotations: failed-tests
      # TODO replace below with commented job above, blocked by Bun not yet supporting a JSON coverage reporter for the action to consume nor generate (similar: https://github.com/oven-sh/bun/issues/4099)
      - name: Install dependencies
        run: bun install
      - name: Run unit tests
        run: bun run test
        env:
          WALLETCONNECT_PROJECT_ID: ${{ vars.WALLETCONNECT_PROJECT_ID }}

  test_e2e:
    name: Run E2E tests üó∫Ô∏è
    timeout-minutes: 3
    runs-on: ubuntu-latest
    # TODO enable, disabled for now while E2E tests are simple. No need to shard early
    # strategy:
    # fail-fast: false
    # shard tests across 4 nodes (https://playwright.dev/docs/test-sharding)
    # matrix:
    # shard: [1/4, 2/4, 3/4, 4/4]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: bun install
      - name: Install Playwright
        run: bunx playwright install --with-deps
      - name: Load test environment variables
        uses: falti/dotenv-action@v1.1.4
        with:
          path: .env.test
      - name: Run E2E tests
        # TODO enable, disabled for now while E2E tests are simple. No need to shard early
        # run: bun test:e2e --shard ${{ matrix.shard }}
        run: bun test:e2e
        env:
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          WALLETCONNECT_PROJECT_ID: ${{ vars.WALLETCONNECT_PROJECT_ID }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_KEYCLOAK_SECRET: ${{ secrets.AUTH_KEYCLOAK_SECRET }}
      - name: Upload blob report to GitHub Actions Artifacts
        # conditionally upload if tests executed and didn't fail
        if: ${{ steps.run_e2e_tests.outcome != 'failure' && steps.run_e2e_tests.conclusion != 'skipped' }}
        uses: actions/upload-artifact@v4
        with:
          name: all-blob-reports
          path: blob-report
          retention-days: 1

  # TODO enable if reports are desirable (after discussion in test suite PR). Note that this job does not work uncommented below, but fixing it is only beneficial if we decide we want this in the first place and its not a premature implementation. See https://github.com/omnidotdev/backfeed-app/pull/51 PR description
  # merge_e2e_reports:
  #   # merge reports after E2E test execution, even if some shards have failed
  #   if: always()
  #   needs: [test_e2e]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: oven-sh/setup-bun@v2
  #     - name: Install dependencies
  #       run: bun install
  #     - name: Download all blob reports from GitHub Actions Artifacts
  #       # NB: need to update loop here to match number of shards used in E2E test job above
  #       run: |
  #         for i in {1..4}; do
  #           echo "Downloading shard-${i} artifact..."
  #           uses: actions/download-artifact@v4
  #           with:
  #             name: blob-report-shard-${i}
  #             path: all-blob-reports/shard-${i}
  #         done
  #     - name: Merge into HTML report
  #       run: bunx playwright merge-reports --reporter html ./all-blob-reports
  #     - name: Upload HTML report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: html-report-attempt-${{ github.run_attempt }}
  #         path: playwright-report
  #         retention-days: 14
