name: Test üß™

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test_unit:
    name: Run unit tests üÉè
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      # - uses: ArtiomTr/jest-coverage-report-action@v2
      #   with:
      #     package-manager: bun
      #     test-script: bun test:coverage
      #     annotations: failed-tests
      # TODO replace below with commented job above, blocked by Bun not yet supporting a JSON coverage reporter for the action to consume nor generate (similar: https://github.com/oven-sh/bun/issues/4099)
      - name: Install dependencies
        run: bun install
      - name: Run unit tests
        run: bun run test

  test_e2e:
    name: Run E2E tests üó∫Ô∏è
    timeout-minutes: 3
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # shard tests across 4 nodes (https://playwright.dev/docs/test-sharding)
      matrix:
        # NB: simple numeric shard names are used here instead of the more common practice of e.g. 1/N, 2/N, ... to resolve a GitHub Actions error if unsupported characters across filesystems are found and used in artifact file paths (e.g. NTFS doesn't support `/`). GitHub implemented this validation check to enable better cross-platform support. Since the matrix shard ID is used in artifact uploads below, using `/` would throw an error.
        # NB: number of shards here needs to match artifact merge job iteration below
        shard: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Install Playwright
        run: bunx playwright install --with-deps
      - name: Run E2E tests
        # TODO remove debug flag, just for testing the action
        run: DEBUG=playwright* bun test:e2e --shard ${{ matrix.shard }}
        env:
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      - name: Upload blob report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-shard-${{ matrix.shard }}
          path: blob-report
          retention-days: 1

  # TODO enable if reports are desirable (after discussion in test suite PR). Note that this job does not work uncommented below, but fixing it is only beneficial if we decide we want this in the first place and its not a premature implementation. See https://github.com/omnidotdev/backfeed-app/pull/51 PR description
  # merge_e2e_reports:
  #   # merge reports after E2E test execution, even if some shards have failed
  #   if: always()
  #   needs: [test_e2e]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: oven-sh/setup-bun@v1
  #       with:
  #         bun-version: latest
  #     - name: Install dependencies
  #       run: bun install
  #     - name: Download all blob reports from GitHub Actions Artifacts
  #       # NB: need to update loop here to match number of shards used in E2E test job above
  #       run: |
  #         for i in {1..4}; do
  #           echo "Downloading shard-${i} artifact..."
  #           uses: actions/download-artifact@v4
  #           with:
  #             name: blob-report-shard-${i}
  #             path: all-blob-reports/shard-${i}
  #         done
  #     - name: Merge into HTML report
  #       run: bunx playwright merge-reports --reporter html ./all-blob-reports
  #     - name: Upload HTML report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: html-report-attempt-${{ github.run_attempt }}
  #         path: playwright-report
  #         retention-days: 14
